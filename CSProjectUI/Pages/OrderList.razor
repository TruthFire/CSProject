@inject IOrder MongoOrders;
@inject AuthenticationStateProvider GetAuthenticationStateAsync
<h3>Order List</h3>

@page "/orders"

<MudTable Items="@userOrders.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>#</MudTh>
        <MudTh>Event name</MudTh>
        <MudTh>Order date</MudTh>
        <MudTh>Tickets</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="#">@context.orderId</MudTd>
        <MudTd DataLabel="Sign">@context.eventInfo.eventName</MudTd>
        <MudTd DataLabel="Name">@context.eventInfo.eventStart</MudTd>
        <MudTd DataLabel="Tickets">link</MudTd>
    </RowTemplate>
</MudTable>

@code {


    private IEnumerable<OrderSchema> userOrders = new List<OrderSchema>();
    string email;

    protected override async Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var currentUserEmail = authstate.User.Claims.FirstOrDefault(cl => cl.Type.ToString() == "emails").Value;
        userOrders = MongoOrders.GetUserOrders(currentUserEmail).Result;

    }


}
